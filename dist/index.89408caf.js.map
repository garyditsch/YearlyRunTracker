{"mappings":"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","sources":["src/js/modules/calendar.js","src/js/modules/helpers.js","src/js/main.js"],"sourcesContent":["async function calendar(theData, table, svg, ...Args){\n\n    const startDate = new Date(Args[0].startDate).getTime()\n    const endDate = new Date(Args[0].endDate).getTime()\n\n    svg.selectAll(\"*\").remove()\n\n    let ed = new Date(endDate).getTime()\n    let sd = new Date(startDate).getTime()\n\n    let allMyDates = await theData(table)\n    console.log(allMyDates)\n\n    let dates = allMyDates.filter(d => {\n        var time = new Date(d.date).getTime();\n        return (sd < time && time < ed);\n    });\n\n    const yearTotal = dates.reduce((runTotal, run) => {\n        const total = runTotal + run.value\n        return total;\n    }, 0)\n\n    const yearData = {\n        'total': yearTotal.toFixed(0), \n        'calYear': dates[0].date.getFullYear(), \n        'noRuns': dates.length\n    }\n\n    // function to return week label\n    const formatDay = d =>\n        [\"Sun\", \"\", \"Tue\", \"\", \"Thu\", \"\", \"Sat\"][d.getUTCDay()];\n    \n    // return an index representing day of week: Ex: 0 = Sunday, 6 = Saturday\n    const countDay = d => d.getUTCDay();\n\n    // had to reduce the dates to get totals for each day\n    // https://stackoverflow.com/questions/47893084/sum-the-values-for-the-same-dates\n    // had some issues with the dates as objects, but changing to string and comparing worked\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleString\n    const reducedDates = dates.reduce(function (allDates, date) {\n        if (allDates.some(function (e) {\n            return e.date.toLocaleString('en-US') === date.date.toLocaleString('en-US')\n        })) {\n            allDates.filter(function (e) {\n                return e.date.toLocaleString('en-US') === date.date.toLocaleString('en-US')\n            })[0].value += +date.value\n        } else {\n            allDates.push({\n                date: date.date,\n                value: +date.value\n            })\n        }\n        return allDates\n    }, []);\n\n\n    // return array with months grouped together. NOTE: nest is deprecated in future d3 versions\n    const months = d3.nest()\n        .key(d => d.date.toLocaleString('default', { month: 'short' }))\n        .entries(reducedDates)\n\n    months.sort((a, b) => (a.values[0].date > b.values[0].date ) ? 1 : ((b.values[0].date > a.values[0].date) ? -1 : 0))\n\n    const month_totals = months.map((month) => {\n        if (month.key === 'Jan'){\n            const allValue = []\n            month.values.map((v) => allValue.push(v.value))\n            return {'key': 'Jan', 'total': d3.sum(allValue).toFixed(2)}\n        } else if (month.key === 'Feb'){\n            const allValue = []\n            month.values.map((v) => allValue.push(v.value))\n            return {'key': 'Feb', 'total': d3.sum(allValue).toFixed(2)}\n        } else if (month.key === 'Mar'){\n            const allValue = []\n            month.values.map((v) => allValue.push(v.value))\n            return {'key': 'Mar', 'total': d3.sum(allValue).toFixed(2)}\n        } else if (month.key === 'Apr'){\n            const allValue = []\n            month.values.map((v) => allValue.push(v.value))\n            return {'key': 'Apr', 'total': d3.sum(allValue).toFixed(2)}\n        } else if (month.key === 'May'){\n            const allValue = []\n            month.values.map((v) => allValue.push(v.value))\n            return {'key': 'May', 'total': d3.sum(allValue).toFixed(2)}\n        } else if (month.key === 'Jun'){\n            const allValue = []\n            month.values.map((v) => allValue.push(v.value))\n            return {'key': 'Jun', 'total': d3.sum(allValue).toFixed(2)}\n        } else if (month.key === 'Jul'){\n            const allValue = []\n            month.values.map((v) => allValue.push(v.value))\n            return {'key': 'Jul', 'total': d3.sum(allValue).toFixed(2)}\n        } else if (month.key === 'Aug'){\n            const allValue = []\n            month.values.map((v) => allValue.push(v.value))\n            return {'key': 'Aug', 'total': d3.sum(allValue).toFixed(2)}\n        } else if (month.key === 'Sep'){\n            const allValue = []\n            month.values.map((v) => allValue.push(v.value))\n            return {'key': 'Sep', 'total': d3.sum(allValue).toFixed(2)}\n        } else if (month.key === 'Aug'){\n            const allValue = []\n            month.values.map((v) => allValue.push(v.value))\n            return {'key': 'Aug', 'total': d3.sum(allValue).toFixed(2)}\n        } else if (month.key === 'Oct'){\n            const allValue = []\n            month.values.map((v) => allValue.push(v.value))\n            return {'key': 'Oct', 'total': d3.sum(allValue).toFixed(2)}\n        } else if (month.key === 'Nov'){\n            const allValue = []\n            month.values.map((v) => allValue.push(v.value))\n            return {'key': 'Nov', 'total': d3.sum(allValue).toFixed(2)}\n        } else if (month.key === 'Dec'){\n            const allValue = []\n            month.values.map((v) => allValue.push(v.value))\n            return {'key': 'Dec', 'total': d3.sum(allValue).toFixed(2)}\n        }\n    })\n\n    // get array of all values\n    const values = reducedDates.map(c => c.value);\n\n    // get max/min values \n    const maxValue = d3.max(values);\n    const minValue = d3.min(values);\n\n    // set constants, yearHeight is * 7 for days of week\n    const cellSize = 10;\n    const yearHeight = cellSize * 5 + 25;\n\n    // https://www.geeksforgeeks.org/d3-js-d3-utcsunday-function/\n    // returns array of all the sundays from a start/end date\n    const timeWeek = d3.utcSunday;\n    const formatDate = d3.utcFormat(\"%x\");\n\n    // adds day of the week\n    svg.append('g')\n        .attr(\"text-anchor\", \"end\")\n        .selectAll(\"text\")\n        .data(d3.range(7).map(i => new Date(1995, 0, i)))\n        .join(\"text\")\n        .attr(\"x\", 20)\n        .attr(\"y\", d => ((countDay(d) + 0.5) * cellSize) + 50)\n        .attr(\"dy\", \"0.31em\")\n        .attr(\"font-size\", 10)\n        .text(formatDay);\n\n    // add year totals\n    svg\n        .append(\"text\")\n        .attr('x', 0)\n        .attr('y', 10)\n        .attr('height', 45)\n        .attr('width', 500)\n        .attr('font-size', 12)\n        .text(`${yearData.calYear} | Total Miles: ${yearData.total}, Total Runs: ${yearData.noRuns}`)\n\n    // adds month label\n    svg\n        .append(\"g\")\n        .selectAll('text')\n        .data(months)\n        .enter().append('text')\n        .attr('x', (d, i) => (yearHeight * i + cellSize * 1.5) + 10 )\n        .attr('y', 30)\n        .attr('height', 45)\n        .attr('width', 50)\n        .attr('font-size', 12)\n        .text(d => { return d.key })\n        .style('fill', '#000')\n\n    svg\n        .append(\"g\")\n        .selectAll('text')\n        .data(month_totals)\n        .enter().append('text')\n        .attr('x', (d, i) => (yearHeight * i + cellSize * 1.5) + 10 )\n        .attr('y', 40)\n        .attr('height', 15)\n        .attr('width', 50)\n        .attr(\"font-size\", 10)\n        .text(d => { return `${d.total} mi` })\n        .style('fill', '#000000')\n\n    // adding g element to svg\n    const group = svg.append(\"g\")\n\n    // adds g element for each month with data to svg\n    // gives the y axis value to move g element based on month index within data\n    const month = group\n        .selectAll(\"g\")\n        .data(months)\n        .join(\"g\")\n        .attr(\n            \"transform\",\n            (d, i) => `translate(${yearHeight * i + cellSize * 1.5}, 0)`\n        );\n\n\n    // http://using-d3js.com/04_05_sequential_scales.html\n    const colorFn = d3\n            .scaleSequential(d3.interpolateBlues)\n            // .scaleSequential(d3.interpolateCool)\n            .domain([Math.floor(minValue), Math.ceil(maxValue)]);\n    const format = d3.format(\"+.2%\");\n\n    month\n        .append(\"g\")\n        .selectAll(\"rect\")\n        .data(d => d.values)\n        .join(\"rect\")\n        .attr(\"width\", cellSize - 1.5)\n        .attr(\"height\", cellSize - 1.5)\n        .attr(\n            \"x\",\n            (d, i) => timeWeek.count(d3.utcMonth(d.date), d.date) * cellSize + 10\n        )\n        .attr(\"y\", d => (countDay(d.date) * cellSize + 0.5) + 50)\n        .attr(\"fill\", d => colorFn(d.value))\n        .append(\"title\")\n            .text(d => `${formatDate(d.date)}: ${d.value.toFixed(2)}`);        \n}\n\nexport { calendar };","import { calendar } from \"./calendar.js\"\n\nconst runTable2 = \"https://quizzical-tereshkova-82c9ca.netlify.app/api/get-past-run-data\"\n\nconst drawCalendar2019 = () =>{\n    const svg = d3.select(\"#calendar_svg_2019\")\n\n    calendar(theData, runTable2, svg, {\n        'startDate': '1/1/2019',\n        'endDate': '12/31/2019',\n        'height': 500,\n        'width': 900,\n        'margin': {\n            left: 0,\n            right: 10,\n            top: 100,\n            bottom: 10\n        },\n        'class': 'spinner3'\n    });\n}\n\nconst drawCalendar2018 = () =>{\n    const svg = d3.select(\"#calendar_svg_2018\")\n\n    calendar(theData, runTable2, svg, {\n        'startDate': '12/31/2017',\n        'endDate': '1/1/2019',\n        'height': 500,\n        'width': 900,\n        'margin': {\n            left: 0,\n            right: 10,\n            top: 100,\n            bottom: 10\n        },\n        'class': 'spinner3'\n    });\n}\n\nconst drawCalendar2017 = () =>{\n    const svg = d3.select(\"#calendar_svg_2017\")\n\n    calendar(theData, runTable2, svg, {\n        'startDate': '12/31/2016',\n        'endDate': '1/1/2018',\n        'height': 500,\n        'width': 900,\n        'margin': {\n            left: 0,\n            right: 10,\n            top: 100,\n            bottom: 10\n        },\n        'class': 'spinner3'\n    });\n}\n\n\nexport { drawCalendar2019, drawCalendar2018, drawCalendar2017 }","import { calendar } from \"./modules/calendar.js\"\nimport { drawCalendar2018, drawCalendar2019, drawCalendar2017 } from \"./modules/helpers.js\"\n\nconst calendar_svg = d3.select(\"#calendar_svg_2022\")\n\nconst runTable = \"https://quizzical-tereshkova-82c9ca.netlify.app/api/get-run-data\"\nconst runTable2 = \"https://quizzical-tereshkova-82c9ca.netlify.app/api/get-past-run-data\"\nlet dateControl = document.querySelector('select');\n\n\ndateControl.addEventListener('change', async () => {\n    console.log(dateControl.value)\n    switch(dateControl.value){\n        case '2022':\n            calendar(theData, runTable, calendar_svg, {\n                'startDate': '12/31/2021',\n                'endDate': '1/1/2023',\n                'height': 500,\n                'width': 900,\n                'margin': {\n                    left: 0,\n                    right: 10,\n                    top: 100,\n                    bottom: 10\n                }, \n            })\n            break;\n        case '2021':\n            calendar(theData, runTable, calendar_svg, {\n                'startDate': '12/31/2020',\n                'endDate': '1/1/2022',\n                'height': 500,\n                'width': 900,\n                'margin': {\n                    left: 0,\n                    right: 10,\n                    top: 100,\n                    bottom: 10\n                }, \n            })\n            break;\n        case '2020':\n            calendar(theData, runTable, calendar_svg, {\n                'startDate': '12/31/2019',\n                'endDate': '1/1/2021',\n                'height': 500,\n                'width': 900,\n                'margin': {\n                    left: 0,\n                    right: 10,\n                    top: 100,\n                    bottom: 10\n                }, \n            })\n            break;\n        case '2019':\n            calendar(theData, runTable2, calendar_svg, {\n                'startDate': '12/31/2018',\n                'endDate': '1/1/2020',\n                'height': 500,\n                'width': 900,\n                'margin': {\n                    left: 0,\n                    right: 10,\n                    top: 100,\n                    bottom: 10\n                }, \n            })\n            break;\n        case '2018':\n            calendar(theData, runTable2, calendar_svg, {\n                'startDate': '12/31/2017',\n                'endDate': '1/1/2019',\n                'height': 500,\n                'width': 900,\n                'margin': {\n                    left: 0,\n                    right: 10,\n                    top: 100,\n                    bottom: 10\n                }, \n            })\n            break;\n        case '2017':\n            calendar(theData, runTable2, calendar_svg, {\n                'startDate': '12/31/2016',\n                'endDate': '1/1/2018',\n                'height': 500,\n                'width': 900,\n                'margin': {\n                    left: 0,\n                    right: 10,\n                    top: 100,\n                    bottom: 10\n                }, \n            })\n            break;\n        // default:\n        //     console.log(\"Score value is neither 10 or 20\");\n    }\n})"],"names":["async","$fb2d9d65b6c9b444$export$56bbcdb8aca31149","theData","table","svg","Args","startDate","Date","getTime","endDate","selectAll","remove","ed","sd","allMyDates","console","log","dates","filter","d","time","date","yearData","reduce","runTotal","run","value","toFixed","getFullYear","length","countDay","getUTCDay","reducedDates","allDates","some","e","toLocaleString","push","months","d3","nest","key","month","entries","sort","a","b","values","month_totals","map","allValue","v","total","sum","c","maxValue","max","minValue","min","cellSize","timeWeek","utcSunday","formatDate","utcFormat","append","attr","data","range","i","join","text","enter","style","month1","colorFn","scaleSequential","interpolateBlues","domain","Math","floor","ceil","format","count","utcMonth","$54b47fc030b7b21e$var$calendar_svg","select","$54b47fc030b7b21e$var$runTable","$54b47fc030b7b21e$var$runTable2","$54b47fc030b7b21e$var$dateControl","document","querySelector","addEventListener","height","width","margin","left","right","top","bottom"],"version":3,"file":"index.89408caf.js.map"}